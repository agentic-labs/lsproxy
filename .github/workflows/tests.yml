name: Run Tests
on:
  push:
    branches: [main]
    paths:
      - 'lsproxy/**'
  pull_request:
    branches: [main, dev]
    paths:
      - 'lsproxy/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Base Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./lsproxy
          load: true
          tags: lsproxy-dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Run Cargo Test in Docker Container
        run: |
          mkdir -p shared
          docker run -v "${PWD}/lsproxy:/usr/src/app" -v "${PWD}:/mnt/lsproxy_root" lsproxy-dev cargo test --lib --bins --tests

  coverage:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./lsproxy
          load: true
          tags: lsproxy-dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      
      - name: Run coverage analysis
        run: |
          mkdir -p lsproxy/coverage
          # Run coverage analysis
          docker run --rm \
            -v "${PWD}/lsproxy:/usr/src/app" \
            -v "${PWD}:/mnt/lsproxy_root" \
            --name coverage-container \
            lsproxy-dev sh -c "cd /usr/src/app && rustup component add llvm-tools-preview && cargo install cargo-llvm-cov && RUST_BACKTRACE=1 cargo llvm-cov --lib --html --output-dir=/usr/src/app/coverage"
          
          # Copy coverage report from container
          docker cp coverage-container:/usr/src/app/coverage/. "${PWD}/lsproxy/coverage/"
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: lsproxy/coverage/
